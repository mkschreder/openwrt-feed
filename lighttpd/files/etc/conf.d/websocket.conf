server.modules += ( "mod_proxy", "mod_websocket" )

# Http Proxy
# 'http://host:port/ipython/' is redirect to Tornado: ipython notebook
#$HTTP["url"] =~ "(^\/ipython\/)" {
#  proxy.server  = ( "" => (( "host" => "127.0.0.1", "port" => 8888 )) )
#}

# 'http://host:port/socket.io/' is redirect to Node.js: socket.io
$HTTP["url"] =~ "^\/socket.io\/" {
  proxy.server  = ( "" => (( "host" => "127.0.0.1", "port" => 8081 )) )
}

websocket.server = (
                     # WebSocket-TCP Proxy
                     # $ ruby bin/echo.rb
                     "/tcp_proxy/" => ( "host" => "127.0.0.1",
                                       "port" => 8081,
                                       "proto" => "tcp" ),

                     # WebSocket Proxies

                     # for socket.io
                     # $ node bin/echo.js
                     "^\/ws.io\/" => ( "host" => "127.0.0.1",
                                           "port" => 1234,
                                           "proto" => "websocket" ),

                     # for ipython notebook                                     
                     # $ ipython profile create default
                     # And rewrite ~/.ipython/profile_default/ipython_notebook_config.py
                     # see <URL: http://ipython.org/ipython-doc/dev/interactive/public_server.html
                     #           #running-with-a-different-url-prefix>
                     # $ ipython notebook --pylab inline --no-browser
                     "^\/ipython\/kernels\/.+" => ( "host" => "127.0.0.1",
                                                    "port" => 8888,
                                                    "proto" => "websocket" ),

                     # for mosquitto
                     # refer to <URL: https://github.com/nori0428/mod_websocket/issues/28>
                     "^\/mqtt\/*" => ( "host" => "127.0.0.1",
                                       "port" => 1883,
                                       "proto" => "tcp",
                                       "type" => "binary",
                                       "subproto" => "mqttv3.1" )
                   )

websocket.ping_interval = 5 # send PING per 5 secs
websocket.timeout = 30      # disconnect a client when not to recv PONG for 30 secs
websocket.debug = 4         # LOG_DEBUG
